    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;



import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KelvinOjeda
 */
public class JFInterfaz extends javax.swing.JFrame {
    
    
    
    /**
     * Creates new form JFInterfaz
     */
    public JFInterfaz() {
        
        initComponents();
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLNombre = new javax.swing.JLabel();
        jLCalificacion = new javax.swing.JLabel();
        jLGenero = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jTFNombre = new javax.swing.JTextField();
        jTFCalificacion = new javax.swing.JTextField();
        jBIngresar = new javax.swing.JButton();
        jComboBGenero = new javax.swing.JComboBox<>();
        jComboBEstado = new javax.swing.JComboBox<>();
        jLID1 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jPanel1 = new javax.swing.JPanel();
        jTFBuscarNombre = new javax.swing.JTextField();
        jBBusquedaNombre = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFBuscarID = new javax.swing.JTextField();
        jBBusquedaID = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTABusqueda = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jTFEliminarID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jBEliminarID = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jBOrdenarNombre = new javax.swing.JButton();
        jBOdernarID = new javax.swing.JButton();
        jBOrdenarAnio = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jCBoxMostrar = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTMostrar = new javax.swing.JTable();
        jBMostrarGenero = new javax.swing.JButton();
        jBMejorPuntuadas = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTFIdAdquilar = new javax.swing.JTextField();
        jBAdquilarPelicula = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTAAdquiladas = new javax.swing.JTextArea();
        jBEliminarColaPelicula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingreso de datos:"));

        jLNombre.setText("Nombre de la pelicula:");

        jLCalificacion.setText("Calificacion de la pelicula:");

        jLGenero.setText("Género de la pelicula:");

        jLEstado.setText("Estado de la pelicula:");

        jTFNombre.setText("Incluir la inicial de la pelicula en mayuscula.");
        jTFNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNombreActionPerformed(evt);
            }
        });

        jTFCalificacion.setText("Máxima puntuación 5 y mínima 0");
        jTFCalificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCalificacionActionPerformed(evt);
            }
        });

        jBIngresar.setText("Ingresar");
        jBIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIngresarActionPerformed(evt);
            }
        });

        jComboBGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona el género:", "Drama", "Comedia", "Terror", "Acción", "Ciencia ficción" }));
        jComboBGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBGeneroActionPerformed(evt);
            }
        });

        jComboBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona la disponibilidad:", "Disponible", "No disponible" }));
        jComboBEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBEstadoActionPerformed(evt);
            }
        });

        jLID1.setText("Año de la pelicula:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLEstado)
                    .addComponent(jLCalificacion)
                    .addComponent(jLGenero)
                    .addComponent(jLID1))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jBIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTFCalificacion, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                                .addComponent(jComboBGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLNombre))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLID1)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCalificacion)
                    .addComponent(jTFCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLGenero)
                    .addComponent(jComboBGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEstado)
                    .addComponent(jComboBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jBIngresar)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ingreso", jPanel2);

        jTFBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBuscarNombreActionPerformed(evt);
            }
        });

        jBBusquedaNombre.setText("Buscar Nombre");
        jBBusquedaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBusquedaNombreActionPerformed(evt);
            }
        });

        jLabel1.setText("Introduzca el nombre de la pelicula:");

        jLabel2.setText("Introduzca el ID de la pelicula:");

        jTFBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBuscarIDActionPerformed(evt);
            }
        });

        jBBusquedaID.setText("Buscar por ID");
        jBBusquedaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBusquedaIDActionPerformed(evt);
            }
        });

        jTABusqueda.setColumns(20);
        jTABusqueda.setRows(5);
        jTABusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder("Busqueda"));
        jScrollPane2.setViewportView(jTABusqueda);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFBuscarNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jTFBuscarID, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBBusquedaNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jBBusquedaID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jBBusquedaNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFBuscarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jBBusquedaID)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Busqueda", jPanel1);

        jLabel4.setText("Digite el ID de la pelicula que quiere eliminar: ");

        jBEliminarID.setText("Eliminar");
        jBEliminarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel4)
                        .addGap(52, 52, 52)
                        .addComponent(jTFEliminarID, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jBEliminarID)))
                .addContainerGap(321, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTFEliminarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBEliminarID)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eliminación", jPanel3);

        jBOrdenarNombre.setText("Ordenar Nombre");
        jBOrdenarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrdenarNombreActionPerformed(evt);
            }
        });

        jBOdernarID.setText("Odernar por ID");
        jBOdernarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOdernarIDActionPerformed(evt);
            }
        });

        jBOrdenarAnio.setText("Ordenar por Año");
        jBOrdenarAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrdenarAnioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jBOrdenarNombre)
                    .addComponent(jBOrdenarAnio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBOdernarID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(438, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jBOrdenarNombre)
                .addGap(18, 18, 18)
                .addComponent(jBOdernarID)
                .addGap(18, 18, 18)
                .addComponent(jBOrdenarAnio)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ordenar", jPanel5);

        jLabel5.setText("Seleccione el genero de la pelicula: ");

        jCBoxMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion:", "Drama", "Comedia", "Terror", "Acción", "Ciencia ficción" }));
        jCBoxMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxMostrarActionPerformed(evt);
            }
        });

        jTMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTMostrar);

        jBMostrarGenero.setText("Mostrar por Genero");
        jBMostrarGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMostrarGeneroActionPerformed(evt);
            }
        });

        jBMejorPuntuadas.setText("Mostrar las 10 peliculas mejor puntuadas");
        jBMejorPuntuadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMejorPuntuadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jBMejorPuntuadas)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jBMostrarGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jCBoxMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)))))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBoxMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBMostrarGenero)
                        .addGap(45, 45, 45)
                        .addComponent(jBMejorPuntuadas))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mostrar", jPanel6);

        jLabel6.setText("Digite el ID de las 5 peliculas a alquilar: ");

        jTFIdAdquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFIdAdquilarActionPerformed(evt);
            }
        });

        jBAdquilarPelicula.setText("Alquilar pelicula");
        jBAdquilarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdquilarPeliculaActionPerformed(evt);
            }
        });

        jTAAdquiladas.setColumns(20);
        jTAAdquiladas.setRows(5);
        jTAAdquiladas.setBorder(javax.swing.BorderFactory.createTitledBorder("Peliculas adquiladas"));
        jScrollPane4.setViewportView(jTAAdquiladas);

        jBEliminarColaPelicula.setText("Eliminar la última pelicula");
        jBEliminarColaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarColaPeliculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jTFIdAdquilar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jBAdquilarPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEliminarColaPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jTFIdAdquilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBAdquilarPelicula)
                            .addComponent(jBEliminarColaPelicula)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Alquilar", jPanel7);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jMenu1.setText("Menu");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 923, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jBOrdenarAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOrdenarAnioActionPerformed
        Collections.sort(listaArray, new ComparadorAnio());
        cargarElementosFilas();
    }//GEN-LAST:event_jBOrdenarAnioActionPerformed

    private void jBOdernarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOdernarIDActionPerformed
        Collections.sort(listaArray, new ComparadorIdPelicula());
        cargarElementosFilas();
    }//GEN-LAST:event_jBOdernarIDActionPerformed

    private void jBOrdenarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOrdenarNombreActionPerformed
        Collections.sort(listaArray, new comparatorNombre());
        cargarElementosFilas();
    }//GEN-LAST:event_jBOrdenarNombreActionPerformed

    private void jBEliminarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarIDActionPerformed
        jTABusqueda.setText("");
        Pattern pat = Pattern.compile("^[0-9]+");
        Matcher mat = pat.matcher(this.jTFEliminarID.getText());
        if (mat.matches() == true) {
            int idEliminar = Integer.parseInt(jTFEliminarID.getText());
            Pelicula paux = new Pelicula(idEliminar, "", 0, 0, "", "");
            String salida= lista.borrarUnNodoPorID(paux);
            System.out.println(salida);
            Collections.sort(listaArray, new ComparadorIdPelicula());
            if (removerID(idEliminar)) {
                JOptionPane.showMessageDialog(null, "Pelicula eliminada con éxito", "Eliminación de peliculas", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "La pelicula no se encuentra en la lista encadenada", "Eliminación de peliculas", JOptionPane.ERROR_MESSAGE);
            }
            
            cargarElementosFilas();
        } else {
            JOptionPane.showMessageDialog(null, "No ha ingresado un número como ID", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            this.jTFEliminarID.setText("");
        }
    }//GEN-LAST:event_jBEliminarIDActionPerformed

    private void jBBusquedaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBusquedaIDActionPerformed
        jTABusqueda.setText("");
        Pattern pat = Pattern.compile("^[0-9]+");
        Matcher mat = pat.matcher(this.jTFBuscarID.getText());
        if (mat.matches() == true) {
            int idPelicula = Integer.parseInt(jTFBuscarID.getText());
            Pelicula paux = new Pelicula(idPelicula, "", 0, 0, "", "");
            String salida = lista.busquedaLinealID(Integer.parseInt(jTFBuscarID.getText()));
            if (!salida.equals("")) {
                System.out.println("El elemento se encuentra en la lista y es: \n" + salida);
            } else {
                System.out.println("El elemento no se encuentra dentro de la lista");
            }
            Collections.sort(listaArray, new ComparadorIdPelicula());
            int posic = Collections.binarySearch(listaArray, paux, new ComparadorIdPelicula());
            //System.out.println("Posicion"+posic);
            if (posic > -1) {
                jTABusqueda.setText(listaArray.get(posic).toString());
            } else {
                jTABusqueda.setText("La lista no cuenta con esta pelicula");
            }
        }else{
             JOptionPane.showMessageDialog(null, "No ha ingresado un número como ID", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
             this.jTFBuscarID.setText("");
        }
        
    }//GEN-LAST:event_jBBusquedaIDActionPerformed

    private void jTFBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBuscarIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFBuscarIDActionPerformed

    private void jBBusquedaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBusquedaNombreActionPerformed
        jTABusqueda.setText("");
        String nombrePelicula= jTFBuscarNombre.getText();
        Pelicula paux=new Pelicula(0, nombrePelicula, 0, 0, "", "");
        String salida=lista.busquedaLinealNombre(jTFBuscarNombre.getText());
        if(!salida.equals("")){
            System.out.println("El elemento se encuentra en la lista y es: \n"+salida);
        }else{
            System.out.println("El elemento no se encuentra dentro de la lista");
        }
        Collections.sort(listaArray, new comparatorNombre());
        int posic=Collections.binarySearch(listaArray, paux, new comparatorNombre());
        //System.out.println("Posicion"+posic);
        if(posic>-1){
            jTABusqueda.setText(listaArray.get(posic).toString());
        }else{
            jTABusqueda.setText("La lista no cuenta con esta pelicula");
        }

    }//GEN-LAST:event_jBBusquedaNombreActionPerformed

    private void jTFBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBuscarNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFBuscarNombreActionPerformed

    private void jComboBEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBEstadoActionPerformed
        if(jComboBGenero.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
        }else{
            this.jBIngresar.requestFocus();
        }

    }//GEN-LAST:event_jComboBEstadoActionPerformed

    private void jComboBGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBGeneroActionPerformed
        if(jComboBGenero.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
        }else{
            this.jComboBGenero.requestFocus();
        }

    }//GEN-LAST:event_jComboBGeneroActionPerformed

    private void jBIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIngresarActionPerformed
        Pelicula pelicula;
        int id=Integer.parseInt(jTFID.getText());
        String nombre= jTFNombre.getText();
        float calificacion= Float.parseFloat(jTFCalificacion.getText());
        int anio= Integer.parseInt(this.jTFAnio.getText());
        if(jComboBEstado.getSelectedIndex()!=0 && jComboBGenero.getSelectedIndex()!=0){
            String genero=(String)jComboBGenero.getSelectedItem();
            String estado  =(String)jComboBEstado.getSelectedItem();
            pelicula= new Pelicula(id, nombre, anio, calificacion, genero, estado);
            lista.añadirOdenarInsercionID(pelicula);
            listaArray.add(pelicula);
            
            cargarElementosFilas();
            System.out.println(lista.toString());
            
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBIngresarActionPerformed

    private void jTFCalificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCalificacionActionPerformed
        Pattern pat = Pattern.compile("([0-4](.)?[0-9]?)|5?");
        Matcher mat=pat.matcher(this.jTFCalificacion.getText());
        if(mat.matches()){
            this.jComboBGenero.requestFocus();
        }else {
            JOptionPane.showMessageDialog(null, "El formato no es el adecuado", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            this.jTFCalificacion.setText("");
            this.jTFCalificacion.requestFocus();
        }
    }//GEN-LAST:event_jTFCalificacionActionPerformed

    private void jTFNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNombreActionPerformed
        Pattern pat = Pattern.compile("^[A-Z].*");
        Matcher mat=pat.matcher(this.jTFNombre.getText());
        if(mat.matches()){
            this.jTFCalificacion.requestFocus();
        }else {
            JOptionPane.showMessageDialog(null, "La inicial debe ser con mayúscula", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            this.jTFNombre.setText("");
            this.jTFNombre.requestFocus();
        }
    }//GEN-LAST:event_jTFNombreActionPerformed

    private void jBMostrarGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMostrarGeneroActionPerformed
    
        if(jCBoxMostrar.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opción", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
        }else{
           
           arrayMostrar.clear();
           Collections.sort(listaArray, new comparatorNombre());
           for(Pelicula pelicula: listaArray){//Se utilzia la lista que permitia comprobar los valores validos de los IDs de la pelicula
               if(pelicula.getGenero().equalsIgnoreCase((String)this.jCBoxMostrar.getSelectedItem())){
                   arrayMostrar.add(pelicula);
               }
           }
            cargarElementosFilasMostrar(arrayMostrar);
        }
        
    }//GEN-LAST:event_jBMostrarGeneroActionPerformed

    private void jCBoxMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxMostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBoxMostrarActionPerformed

    private void jBMejorPuntuadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMejorPuntuadasActionPerformed
        ArrayList <Pelicula> arrayMejoresPelicula= new ArrayList<Pelicula>();
        arrayMejoresPelicula.clear();
        //Se añaden los elementos de la lista original
        for(Pelicula pelicula: listaArray){
            arrayMejoresPelicula.add(pelicula);
        } 
        Collections.sort(arrayMejoresPelicula, new comparatorCalificacion());
        cargarElementosFilasMostrarDiezMejoresPeliculas(arrayMejoresPelicula);
        
    }//GEN-LAST:event_jBMejorPuntuadasActionPerformed

    private void jTFIdAdquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFIdAdquilarActionPerformed
        Pattern pat = Pattern.compile("^[0-9]+");
        Matcher mat=pat.matcher(this.jTFIdAdquilar.getText());
        Pelicula paux=new Pelicula(Integer.parseInt(this.jTFIdAdquilar.getText()), "", 0, 0, "", "");
        arrayPelicula2.clear();
        for(Pelicula aux: listaArray){
            arrayPelicula2.add(aux);
        }
        int posic=Collections.binarySearch(arrayPelicula2, paux,new ComparadorIdPelicula());
        //System.out.println("Posicion"+posic);
        if(mat.matches()==true){
            if(posic>-1){
           
                this.jBAdquilarPelicula.requestFocus();
            }else{
                JOptionPane.showMessageDialog(null, "No existe un ID con esta pelicula", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(null, "El formato no es el adecuado para la ID de una pelicula", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_jTFIdAdquilarActionPerformed

    private void jBAdquilarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdquilarPeliculaActionPerformed
        Pattern pat = Pattern.compile("^[0-9]+");
        Matcher mat = pat.matcher(this.jTFIdAdquilar.getText());
        String idPeliculaConsola=this.jTFIdAdquilar.getText();
        if (mat.matches() == true) {
            if (!this.jTFIdAdquilar.getText().equals("")) {

                Pelicula paux = new Pelicula(Integer.parseInt(this.jTFIdAdquilar.getText()), "", 0, 0, "", "");
                //Se ordena la lista para observar los elementos acorde al de la ID
                Collections.sort(listaArray, new ComparadorIdPelicula());
                int posic = Collections.binarySearch(listaArray, paux, new ComparadorIdPelicula());

                if (posic > -1) {
                    Pelicula peliculaAux = listaArray.get(posic);
                    if (peliculaAux.getEstado().equalsIgnoreCase("No disponible")) {
                        JOptionPane.showMessageDialog(null, "Ya se encuentra arquilada esta pelicula", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);

                    } else {
                        if (z < 5) {
                            if (lista.cambiarEstadoNoDisponible(Integer.parseInt(this.jTFIdAdquilar.getText()))) {
                                System.out.println("Se añadio a la cola la pelicula con ID " +idPeliculaConsola );
                            } else {
                                System.out.println("No se añadio la pelicula "  +idPeliculaConsola+ " a la cola");
                            }
                            this.jTAAdquiladas.setText("");
                            peliculaAux.setEstado("No disponible");
                            //Ubicar dentro del arrayList el elemento modificado
                            listaArray.set(posic, peliculaAux);
                            //Cargo la lista para observar los cambios
                            cargarElementosFilas();
                            cola.anadirElementos(peliculaAux);
                            this.jTAAdquiladas.setText(cola.toString());
                            z++;
                        } else {
                            JOptionPane.showMessageDialog(null, "La cola se encuentra llena", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "No existe un ID con esta pelicula", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Digite un número en el campo ID", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite un número en el campo ID", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jBAdquilarPeliculaActionPerformed

    private void jBEliminarColaPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarColaPeliculaActionPerformed
       Pelicula peliculaColaAEliminar;
       if(z>0){
       peliculaColaAEliminar= cola.PrimerElementoCola();
       //Posicion dentro de la lista
       int idEnListaDesdeCola= peliculaColaAEliminar.getId_pelicula();
       z--;
       //Busqueda de la posicion dentro de la lista
       Pelicula paux= new Pelicula(idEnListaDesdeCola, "", 0, 0, "", "");
       Collections.sort(listaArray, new ComparadorIdPelicula());
        int posic=Collections.binarySearch(listaArray, paux,new ComparadorIdPelicula());
        //Ubicacion del estado disponible
       peliculaColaAEliminar.setEstado("Disponible");
       if(lista.cambiarEstadoDisponible(idEnListaDesdeCola)){
           System.out.println("Se ha eliminado la pelicula de la cola con ID "+idEnListaDesdeCola);
       }
       //Ubicar dentro del array
       listaArray.set(posic, peliculaColaAEliminar);
       //Eliminar el primero elemento en la cola, por lo que la cola es FIFO
       cola.eliminarUltimo();
       //Actualizar la tabla
       cargarElementosFilas();
       this.jTAAdquiladas.setText(cola.toString());
       }else{
           JOptionPane.showMessageDialog(null, "La cola se encuentra vacia", "Ingerso inadecuado", JOptionPane.ERROR_MESSAGE);
       }
       
    }//GEN-LAST:event_jBEliminarColaPeliculaActionPerformed
    public boolean removerNombre(String nom) {
            boolean t = false;
            Iterator<Pelicula> iteratorPelicula = listaArray.iterator();
            while (iteratorPelicula.hasNext()) {
                String nombre = iteratorPelicula.next().getNombre();
                if (nombre.equalsIgnoreCase(nom)) {
                    t = true;
                    iteratorPelicula.remove();
                }
            }
            return t;
        }
    public boolean removerID(int i) {
            boolean t = false;
            Iterator<Pelicula> iteratorPelicula = listaArray.iterator();
            while (iteratorPelicula.hasNext()) {
                int valorID = iteratorPelicula.next().getId_pelicula();
                if (valorID==i) {
                    t = true;
                    iteratorPelicula.remove();
                }
            }
            return t;
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFInterfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdquilarPelicula;
    private javax.swing.JButton jBBusquedaID;
    private javax.swing.JButton jBBusquedaNombre;
    private javax.swing.JButton jBEliminarColaPelicula;
    private javax.swing.JButton jBEliminarID;
    public javax.swing.JButton jBIngresar;
    private javax.swing.JButton jBMejorPuntuadas;
    private javax.swing.JButton jBMostrarGenero;
    private javax.swing.JButton jBOdernarID;
    private javax.swing.JButton jBOrdenarAnio;
    private javax.swing.JButton jBOrdenarNombre;
    private javax.swing.JComboBox<String> jCBoxMostrar;
    public javax.swing.JComboBox<String> jComboBEstado;
    public javax.swing.JComboBox<String> jComboBGenero;
    private javax.swing.JLabel jLCalificacion;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLGenero;
    private javax.swing.JLabel jLID1;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTAAdquiladas;
    private javax.swing.JTextArea jTABusqueda;
    private javax.swing.JTextField jTFBuscarID;
    private javax.swing.JTextField jTFBuscarNombre;
    public javax.swing.JTextField jTFCalificacion;
    private javax.swing.JTextField jTFEliminarID;
    private javax.swing.JTextField jTFIdAdquilar;
    public javax.swing.JTextField jTFNombre;
    public javax.swing.JTable jTMostrar;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JTable jTable;
    public com.toedter.calendar.JYearChooser jYearChooser1;
    // End of variables declaration//GEN-END:variables
}
